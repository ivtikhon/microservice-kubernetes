---
# Parameters to submit (e.g. as extra-vars):
#   - aws_access_key
#   - aws_secret_key
#   - git_repo_path
#   - git_token
#   - ssh_private_key_path
#   - ssh_key_name

- name: Create VPC
  hosts: localhost
  vars:
    eks_cluster_name: dev_eks
  roles:
    - vpc

- name: Launch Deployment server
  hosts: localhost
  vars:
    deployment_security_group: public-ssh
    deployment_subnet_id: "{{hostvars['localhost']['deployment_subnet_id']}}"
    codedeploy_application_name: 'microservice'
    codedeploy_deployment_group_name: 'deployment-server'
  roles:
    - codedeploy
  post_tasks:
    - name: Add Deployment server to deployment group
      add_host:
        name: deployment_server
        groups: deployment
        ansible_host: "{{hostvars['localhost']['deployment_server_ip_address']}}"
        ansible_user: 'ubuntu'
        ansible_ssh_private_key_file: "{{ssh_private_key_path}}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

- name: Create EKS cluster and worker nodes
  hosts: localhost
  vars:
    vpc_id: "{{hostvars['localhost']['vpc_id']}}"
    eks_subnet_ids: "{{hostvars['localhost']['private_subnet_ids']}}"
    eks_cluster_name: dev_eks
    eks_create: true
  roles:
    - eks

- name: Configure access to EKS from Deployment server
  hosts: deployment
  vars:
    eks_configure: true
    eks_certificate_authority_data: "{{hostvars['localhost']['eks_certificate_authority_data']}}"
    eks_server: "{{hostvars['localhost']['eks_server']}}"
    eks_node_role_arn: "{{hostvars['localhost']['eks_node_role_arn']}}"
    deployment_server_role_arn: "{{hostvars['localhost']['deployment_server_role_arn']}}"
  roles:
    - eks

- name: Create CodeBuild project to build Spring app
  hosts: localhost
  vars:
    codebuild_project_name: 'microservice-spring'
    codebuild_project_description: 'Compile Microservice Demo code'
    codebuild_buildspec_file: buildspec_spring.yml
  roles:
    - codebuild

- name: Create CodeBuild project to build Docker containers
  hosts: localhost
  vars:
    # ecr_repository_uri: "{{hostvars['localhost']['ecr_repository_uri']}}"
    container_registry: 718067358621.dkr.ecr.us-east-1.amazonaws.com
    aws_account_id: "{{hostvars['localhost']['aws_account_id']}}"
    codebuild_project_name: 'microservice-container'
    codebuild_project_description: 'Build Microservice Demo containers'
    codebuild_role_policies: 'arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess'
    codebuild_privileged_mode: true
    codebuild_buildspec_file: buildspec_container.yml
  roles:
    - codebuild

- name: Create CodePipeline
  hosts: localhost
  vars:
    source_repo_name: "{{git_repo_path | urlsplit('path') | basename | regex_replace('.git')}}"
    source_repo_owner: "{{git_repo_path | urlsplit('path') | dirname | regex_replace('/')}}"
    source_repo_token: '{{git_token}}'
    codebuild_build_project: 'microservice-spring'
    codebuild_container_project: 'microservice-container'
    codedeploy_application_name: 'microservice'
    codedeploy_deployment_group_name: 'deployment-server'
  roles:
    - codepipeline
